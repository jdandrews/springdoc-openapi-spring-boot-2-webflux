import org.springframework.aot.gradle.dsl.AotMode

plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.springframework.experimental.aot' version '0.12.0'
    id 'org.springdoc.openapi-gradle-plugin' version '1.4.0'
	id 'java'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/release' }
}

dependencies {
    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.10'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.10'
    implementation 'org.springdoc:springdoc-openapi-native:1.6.10'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    runtimeOnly 'com.h2database:h2:2.1.214'
    runtimeOnly 'io.r2dbc:r2dbc-h2:0.9.1.RELEASE'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test:3.4.21'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

group = 'org.springdoc'
version = '3.1.6-SNAPSHOT'
description = 'springdoc-openapi-spring-boot-2-webflux'
sourceCompatibility = '11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

graalvmNative {
    // metadataRepository {
    //     enabled = true
    // }
	binaries {
		main {
			// Main options
			debug = true // Determines if debug info should be generated, defaults to false
			verbose = true // Add verbose output, defaults to false
			fallback = false // Sets the fallback mode of native-image, defaults to false
            buildArgs.add('-H:+ReportExceptionStackTraces')
            buildArgs.add('--enable-http')
            buildArgs.add('--enable-https')
            buildArgs.add('--initialize-at-build-time=sun.instrument.InstrumentationImpl')
            buildArgs.add('--initialize-at-run-time=io.netty.handler.ssl.BouncyCastleAlpnSslUtils')
			buildArgs.add('-Ob')
		}
	}
}
